#!/usr/local/opt/python/bin/python3.7
# Adapted from : http://code.activestate.com/recipes/577358-pomodoro-timer/
from __future__ import print_function
from clize import run
from sigtools import modifiers
import sys
import time
import subprocess
from datetime import timedelta
from datetime import datetime
import os
import sys

try:
    from PyQt5.QtWidgets import QMessageBox
    from PyQt5.Qt import QApplication
except ImportError:
    has_qt = False
else:
    has_qt = True


display = print
script_dir = os.path.dirname(__file__)
DATA_FILENAME = os.path.expanduser("~/.pomodoro")
DEV_NULL = open(os.devnull, "w")


def notify(title, content, more=''):
    os.system("""osascript -e 'display notification "{}" \
              with title "{}" \
              sound name "Glass"'""".format(content, title))


def tick(duration, mode):
    try:
        update_interval = 1
        for s in range(int(duration / update_interval)):
            td = timedelta(seconds = duration - s*update_interval)
            sys.stdout.write("%s: %s \r" % (mode, td))
            sys.stdout.flush()
            time.sleep(update_interval)
        sys.stdout.write("%s: ‚òëÔ∏è       \r" % mode)
        display("\r")
    except KeyboardInterrupt:
        display("\r\nBye!")
        interrupt = True
    else:
        interrupt = False
    return interrupt


def write_pomo(start, stop, tag):
    duration = (stop - start).total_seconds() / 60.
    line = "{0},{1},{2},{3}\n".format(tag, start, stop, duration)
    if not os.path.exists(DATA_FILENAME):
        fd = open(DATA_FILENAME, "w")
        fd.write("work,start,end,duration\n")
    else:
        fd = open(DATA_FILENAME, "a")
    fd.write(line)
    fd.close()


@modifiers.kwoargs('repeat')
def main(work=26, rest=6, overtime=20, repeat=6):
    """
    work : int
        nb of minuntes of work

    rest : int
        nb of minutes of rest

    overtime : int
        nb of seconds extra before switching mode

    repeat : int
        nb of cycles work-rest to do
    """
    for i in range(repeat):
        start = datetime.now()
        interrupted = tick(int(work) * 60, 'Working')
        if interrupted:
            break
        stop = datetime.now()
        write_pomo(start, stop, "work")
        notify('üçÖ Pomodoro done!', 'Rest easy.')

        interrupted = tick(int(overtime), 'Wrapping up')
        if interrupted:
            break

        start = datetime.now()
        interrupted = tick(int(rest) * 60, 'Resting')
        if interrupted:
            break
        stop = datetime.now()
        write_pomo(start, stop, "rest")

        display("\r\nCompleted %s/%s [%s]\r\n" % (i+1, repeat, datetime.now().strftime("%H:%M")))
        notify('üçè Pomodoro started!', 'Back to work!')

        interrupted = tick(int(overtime), 'Getting ready')
        if interrupted:
            break


if __name__ == "__main__":
    run(main)
